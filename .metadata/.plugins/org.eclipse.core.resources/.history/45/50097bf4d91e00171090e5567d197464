package com.code.interview.bit;

public class MakingStringPallindromic {
	
	
	public static int solve(String A) {
		char[] chars = A.toCharArray();
		int len = A.length();
		int i=0;
		int j=len-1;
		while(i>=0 && j<len) {
			char ch = chars[i];
			chars[i] = chars[j];
			chars[j] = ch;
			i--;
			j++;
		}
		String ans = convertPalindrome(new String(chars));
		String tmp = A
    }
	public static void main(String[] args) {
		
		String tester = "AACECAAAA";
		String test = "AAAACECAA";
		String ans = convertPalindrome(test);
		System.out.println(ans.length()-tester.length());
	}
 
	public static String convertPalindrome(String str) {
		if (str == null)
			return str;
		int n = str.length();
		if ((n == 0) || (n == 1))
			return str;
 
		StringBuilder strBuilder = new StringBuilder(str);
		int i = 0;
		int j = n - 1;
		int appendIndex = 0;
		while (i < j) {
			if (str.charAt(i) == str.charAt(j)) {
				i++;
				j--;
			} else {
				appendIndex=j+1;
				strBuilder.insert(appendIndex, str.charAt(i));	
				i++;
			}
		}
		return strBuilder.toString();
	}

}
