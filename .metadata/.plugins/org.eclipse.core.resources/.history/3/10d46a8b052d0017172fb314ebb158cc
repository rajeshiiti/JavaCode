package com.code.dp.problems;

public class LongestIncreasingSubsequenceUsingDP {

	public static void main(String[] args) {
		
	}
	
	public int lis(int[] A) {
		int len = A.length;
		if(A.length<=len) {
			return len;
		}
		int[] dp = new int[len+1];
		for(int i=0;i<len;i++) {
			dp[i] = 1;
		}
		
		for(int i=1;i<len;i++) {
			for(int j=0;j<i;j++) {
				if(A[j]>A[i] && dp[j]+1>dp[i]) {
					dp[j] +=1;
				}
			}
		}
		
		return dp[len];
	}

}
