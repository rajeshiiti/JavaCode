package com.code.interview.bit;

public class MakingStringPallindromic {
	public static void main(String[] args) {
		System.out.println(solve("aaabaa"));
	}
	
	public static int solve(String A) {
		int len = A.length();
		if(len<=1) {
			return 0;
		}
		int mid = len / 2 -1;
		int start = mid +1;
		if(len%2==1) {
			start = mid+2;
		}
		for(int i=mid;i>=0;i--) {
			boolean bl = false;
			int tmp = i;
			while(tmp>=0 && start<len && A.charAt(tmp)==A.charAt(start)) {
				tmp--;
				start++;
			}
			if(tmp<0 && start==len) {
				return 0;
			}
			if(tmp<0) {
				return len-2*i;
			}
			start = i;
		}
		return len-1;
    }
	public static void main(String[] args) {
		String tester = "banana";
		System.out.print(convertPalindrome(tester));
	}
 
	public static String convertPalindrome(String str) {
		if (str == null)
			return str;
		int n = str.length();
		if ((n == 0) || (n == 1))
			return str;
 
		StringBuilder strBuilder = new StringBuilder(str);
		int i = 0;
		int j = n - 1;
		int appendIndex = 0;
		while (i < j) {
			if (str.charAt(i) == str.charAt(j)) {
				i++;
				j--;
			} else {
				appendIndex=j+1;
				strBuilder.insert(appendIndex, str.charAt(i));	
				i++;
			}
		}
		return strBuilder.toString();
	}

}
